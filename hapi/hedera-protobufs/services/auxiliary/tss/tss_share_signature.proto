/**
 * # Tss Share Signature
 * Submits a share signature of node on a block hash during TSS process.
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in
 * [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
 * [RFC8174](https://www.ietf.org/rfc/rfc8174).
 */
syntax = "proto3";

package com.hedera.hapi.services.auxiliary.tss;

/*
 * Copyright (C) 2024 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "com.hedera.hapi.services.auxiliary.tss.legacy";
// <<<pbj.java_package = "com.hedera.hapi.services.auxiliary.tss">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

/**
 * The body of a transaction that contains a share signature produced
 * by a node in a TSS network. This transaction will be gossipped with highest priority.
 *
 * ### Block Stream Effects
 * This transaction body will be present in the block stream. This will not have
 * any state changes or transaction output or transaction result.
 */
message TssShareSignatureTransactionBody {
  /**
   * A SHA2-384 Hash.<br/>
   * This is the hash of the roster containing the node whose
   * share produced this share signature.
   * <p>
   * This value is REQUIRED.<br/>
   * This value MUST identify the network roster active at the time this
   * share signature was produced.<br/>
   * This share signature MUST be produced from a share distributed during
   * the rekey process for the identified roster.
   */
  bytes roster_hash = 1;

  /**
   * The index of the share that produced this share signature.
   */
  uint64 share_index = 2;

  /**
   * The hash of the message that was signed by the share.
   */
  bytes message_hash = 3;

  /**
   * The share signature produced by the share.
   */
  bytes share_signature = 4;
}
