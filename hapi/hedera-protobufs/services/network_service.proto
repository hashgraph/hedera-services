syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.service.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.network">>> This comment is special code for setting PBJ Compiler java package

import "query.proto";
import "response.proto";
import "transaction_response.proto";
import "transaction.proto";

/**
 * The requests and responses for different network services.
 */
service NetworkService {
    /**
     * Retrieves the active versions of Hedera Services and HAPI proto
     */
    rpc getVersionInfo (Query) returns (Response);

    /**
     * Retrieves the time in nanoseconds spent in <tt>handleTransaction</tt> for one or more 
     * TransactionIDs (assuming they have reached consensus "recently", since only a limited 
     * number of execution times are kept in-memory, depending on the value of the node-local 
     * property <tt>stats.executionTimesToTrack</tt>).
     */
    rpc getExecutionTime (Query) returns (Response);

    /**
     * Submits a "wrapped" transaction to the network, skipping its standard prechecks. (Note that
     * the "wrapper" <tt>UncheckedSubmit</tt> transaction is still subject to normal prechecks,
     * including an authorization requirement that its payer be either the treasury or system admin
     * account.)
     */
    rpc uncheckedSubmit (Transaction) returns (TransactionResponse);

    /**
     * Get all the information about an account, including balance and allowances. This does not get the list of
     * account records.
     */
    rpc getAccountDetails (Query) returns (Response);
}
