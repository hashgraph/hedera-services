syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2023 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

import "basic_types.proto";

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.state.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;
/**
 * Representation of a Hedera Token Service token relationship entity in the network Merkle tree.
 *
 * As with all network entities, a token relationship has a unique entity number pair, which is represented
 * with the account and the token involved in the relationship.
 */
message TokenRelation {
    /**
     * The token involved in this relation.It takes only positive
     */
    TokenID token_id = 1;
    /**
     * The account involved in this association.
     */
    AccountID account_id = 2;
    /**
     * The balance of the token relationship.
     */
    int64 balance = 3;
    /**
     * The flags specifying the token relationship is frozen or not.
     */
    bool frozen = 4;
    /**
     * The flag indicating if the token relationship has been granted KYC.
     */
    bool kyc_granted = 5;
    /**
     * The flag indicating if the token relationship was created using automatic association.
     */
    bool automatic_association = 6;
    /**
     * The previous token id of account's association linked list
     */
    TokenID previous_token = 7;
    /**
     * The next token id of account's association linked list
     */
    TokenID next_token = 8;
}
