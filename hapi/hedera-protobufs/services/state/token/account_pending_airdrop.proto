syntax = "proto3";

package proto;

/*
 * Copyright (C) 2024 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import "basic_types.proto";

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.state.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;


/**
 * A node within a doubly linked list of pending airdrop references.<br/>
 * This internal state message forms the entries in a doubly-linked list
 * of references to pending airdrop entries that are "owed" by a particular
 * account as "sender".
 *
 * Each entry in this list MUST refer to an existing pending airdrop.<br/>
 * The pending airdrop MUST NOT be claimed.<br/>
 * The pending airdrop MUST NOT be canceled.<br/>
 * The pending airdrop `sender` account's `head_pending_airdrop_id` field
 * MUST match the `pending_airdrop_id` field in this message.
 *
 * ### Record Stream Effects
 * This value is not currently published in the record stream.
 */
message AccountPendingAirdrop {
  /**
   * The value of the current airdrop id. SHALL NOT be set for non fungible tokens
   */
  PendingAirdropValue pending_airdrop_value = 1;

  /**
   * A pending airdrop identifier.<br/>
   * This identifies the specific pending airdrop that precedes this position
   * within the doubly linked list of pending airdrops "owed" by the sending
   * account associated with this account airdrop "list".
   * <p>
   * This SHALL match `pending_airdrop_id` if this is the only entry
   * in the "list".
   */
  PendingAirdropId previous_airdrop = 2;

  /**
   * A pending airdrop identifier.<br/>
   * This identifies the specific pending airdrop that follows this position
   * within the doubly linked list of pending airdrops "owed" by the sending
   * account associated with this account airdrop "list".
   * <p>
   * This SHALL match `pending_airdrop_id` if this is the only entry
   * in the "list".
   */
  PendingAirdropId next_airdrop = 3;
}
