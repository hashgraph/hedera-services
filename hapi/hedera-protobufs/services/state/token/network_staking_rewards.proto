syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2023 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.state.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

/**
 * Representation of a Hedera Token Service staking reward entity in the network Merkle tree.
 * This consists of all the information needed to calculate the staking rewards for all nodes in the network. It is
 * calculated at the beginning of each staking period for all nodes and is needed to have same values
 * for reconnect.
 *
 * As with all network entities, staking info is per node and has a unique entity number represented as shard.realm.X.
 */
message NetworkStakingRewards {

  /**
   * Whether staking rewards are activated on the network. This is set to true when the balance of 0.0.800
   * reaches minimum required balance.
   */
  bool staking_rewards_activated = 1;

  /**
  * Total of (balance + stakedToMe) for all accounts staked to all nodes in the network with declineReward=false, at the
  * beginning of the new staking period.
  */
  int64 total_staked_reward_start = 2;

  /**
  * Total of (balance + stakedToMe) for all accounts staked to all nodes in the network, at the beginning of the new
  * staking period.
  */
  int64 total_staked_start = 3;

  /**
   * The total staking rewards in tinybars that COULD be collected by all accounts staking to all nodes after the end
   * of this staking period; assuming that no account "renounces" its rewards by, for example, setting declineReward=true.
   */
  int64 pending_rewards = 4;
}
