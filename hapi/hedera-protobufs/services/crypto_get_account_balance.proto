syntax = "proto3";

package proto;

/*-
 * ‌
 * Hedera Network Services Protobuf
 * ​
 * Copyright (C) 2018 - 2021 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "basic_types.proto";
import "query_header.proto";
import "response_header.proto";

/**
 * Get the balance of a cryptocurrency account. This returns only the balance, so it is a smaller
 * reply than CryptoGetInfo, which returns the balance plus additional information.
 */
message CryptoGetAccountBalanceQuery {
    /**
     * Standard info sent from client to node, including the signed payment, and what kind of
     * response is requested (cost, state proof, both, or neither).
     */
    QueryHeader header = 1;

    oneof balanceSource {
    	/**
    	 * The account ID for which information is requested
    	 */
    	AccountID accountID = 2;

    	/**
    	 * The account ID for which information is requested
    	 */
    	ContractID contractID = 3;
    }
}

/**
 * Response when the client sends the node CryptoGetAccountBalanceQuery
 */
message CryptoGetAccountBalanceResponse {
    /**
     * Standard response from node to client, including the requested fields: cost, or state proof,
     * or both, or neither.
     */
    ResponseHeader header = 1;

    /**
     * The account ID that is being described (this is useful with state proofs, for proving to a
     * third party)
     */
    AccountID accountID = 2;

    /**
     * The current balance, in tinybars.
     */
    uint64 balance = 3;

    /**
     * [DEPRECATED] The balances of the tokens associated to the account. This field was 
     * deprecated by <a href="https://hips.hedera.com/hip/hip-367">HIP-367</a>, which allowed 
     * an account to be associated to an unlimited number of tokens. This scale makes it more 
     * efficient for users to consult mirror nodes to review their token balances.
     */
    repeated TokenBalance tokenBalances = 4 [deprecated = true];
}
