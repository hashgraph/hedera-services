/**
 * # Token Cancel Airdrop
 * Messages used to implement a transaction to cancel a pending airdrop.
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in [RFC2119](https://www.ietf.org/rfc/rfc2119).
 */
syntax = "proto3";

package proto;

/*
 * Copyright (C) 2024 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "basic_types.proto";

/**
 * Token cancel airdrop<br/>
 * Remove one or more pending airdrops from state on behalf of the sender(s)
 * for each airdrop.
 *
 * Each pending airdrop canceled SHALL be removed from state and SHALL NOT be available to claim.<br/>
 * Each cancellation SHALL be represented in the transaction body and SHALL NOT be restated
 * in the record file.<br/>
 * All cancellations MUST succeed for this transaction to succeed.
 */
message TokenCancelAirdropTransactionBody {
  /**
   * A list of one or more pending airdrop identifiers.<br/>
   * This list declares the set of pending airdrop entries that the client
   * wishes to cancel; on success all listed pending airdrop entries
   * will be removed.
   * <p>
   * This transaction MUST be signed by the account referenced by a `sender_id` for
   * each entry in this list.<br/>
   * This list MUST NOT have any duplicate entries.<br/>
   * This list MUST contain between 1 and 10 entries, inclusive.
   */
  repeated PendingAirdropId pending_airdrops = 1;
}
