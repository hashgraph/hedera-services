/**
 * # Get Stakers
 * Query all of the accounts proxy staking _to_ a specified account.
 *
 * > Important
 * >> This query is obsolete and not supported.<br/>
 * >> Any query of this type that is submitted SHALL fail with a `PRE_CHECK`
 * >> result of `NOT_SUPPORTED`.
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in
 * [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
 * [RFC8174](https://www.ietf.org/rfc/rfc8174).
 */
syntax = "proto3";

package proto;

/*
 * Copyright (C) 2018-2024 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.token">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "basic_types.proto";
import "query_header.proto";
import "response_header.proto";

/**
 * Get all the accounts that are proxy staking to this account. For each of
 * them, give the amount currently staked. This was never implemented.
 */
message CryptoGetStakersQuery {
    option deprecated = true;
    /**
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     */
    QueryHeader header = 1;

    /**
     * The Account ID for which the records should be retrieved
     */
    AccountID accountID = 2;
}

/**
 * information about a single account that is proxy staking
 */
message ProxyStaker {
    option deprecated = true;
    /**
     * The Account ID that is proxy staking
     */
    AccountID accountID = 1;

    /**
     * The number of hbars that are currently proxy staked
     */
    int64 amount = 2;
}

/**
 * All of the accounts proxy staking to a given account, and the amounts proxy
 * staked
 */
message AllProxyStakers {
    option deprecated = true;
    /**
     * The Account ID that is being proxy staked to
     */
    AccountID accountID = 1;

    /**
     * Each of the proxy staking accounts, and the amount they are proxy staking
     */
    repeated ProxyStaker proxyStaker = 2;
}

/**
 * Response when the client sends the node CryptoGetStakersQuery
 */
message CryptoGetStakersResponse {
    option deprecated = true;
    /**
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     */
    ResponseHeader header = 1;

    /**
     * List of accounts proxy staking to this account, and the amount each is
     * currently proxy staking
     */
    AllProxyStakers stakers = 3;
}
