/**
 * # Get By Solidity
 * A standard query to obtain account and contract identifiers for a smart
 * contract, given the Solidity identifier for that contract.
 *
 * > Important
 * >> This query is obsolete and not supported.<br/>
 * >> Any query of this type that is submitted SHALL fail with a `PRE_CHECK`
 * >> result of `NOT_SUPPORTED`.
 *
 * ### Keywords
 * The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
 * "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
 * document are to be interpreted as described in
 * [RFC2119](https://www.ietf.org/rfc/rfc2119) and clarified in
 * [RFC8174](https://www.ietf.org/rfc/rfc8174).
 */
syntax = "proto3";

package proto;

/*
 * Copyright (C) 2018-2024 Hedera Hashgraph, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

option java_package = "com.hederahashgraph.api.proto.java";
// <<<pbj.java_package = "com.hedera.hapi.node.contract">>> This comment is special code for setting PBJ Compiler java package
option java_multiple_files = true;

import "basic_types.proto";
import "query_header.proto";
import "response_header.proto";

/**
 * Query to read Contract, Account, and File identifiers for a smart
 * contract given a Solidity identifier.
 */
message GetBySolidityIDQuery {
    option deprecated = true;
    /**
     * Standard information sent with every query operation.<br/>
     * This includes the signed payment and what kind of response is requested
     * (cost, state proof, both, or neither).
     */
    QueryHeader header = 1;

    /**
     * A contract ID in the format used by Solidity.
     * <p>
     * This field is REQUIRED.
     */
    string solidityID = 2;
}

/**
 * Response to a getBySolidityId query.
 *
 * This message returns the account, contract, and file identifiers for
 * a smart contract.
 */
message GetBySolidityIDResponse {
    option deprecated = true;
    /**
     * The standard response information for queries.<br/>
     * This includes the values requested in the `QueryHeader`
     * (cost, state proof, both, or neither).
     */
    ResponseHeader header = 1;

    /**
     * An account identifier.
     * <p>
     * This SHALL identify an account that backs the requested smart contract.
     */
    AccountID accountID = 2;

    /**
     * A file identifier.
     * <p>
     * This SHALL identify a file, the contents of which are the EVM
     * bytecode for the requested smart contract.
     */
    FileID fileID = 3;

    /**
     * A contract identifier.
     * <p>
     * This SHALL identify the requested smart contract.
     */
    ContractID contractID = 4;
}
