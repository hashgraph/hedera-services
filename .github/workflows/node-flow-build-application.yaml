##
# Copyright (C) 2022-2025 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "Node: Build Application"
on:
  workflow_dispatch:
    inputs:
      enable-unit-tests:
        description: "Unit Testing Enabled"
        type: boolean
        required: false
        default: true
      enable-hapi-tests:
        description: "HAPI Testing Enabled"
        type: boolean
        required: false
        default: false
      enable-spotless-check:
        description: "Spotless Check Enabled"
        type: boolean
        required: false
        default: false
      enable-snyk-scan:
        description: "Snyk Scan Enabled"
        type: boolean
        required: false
        default: false
      java-version:
        description: "Java JDK Version:"
        type: string
        required: false
        default: "21.0.4"
      java-distribution:
        description: "Java JDK Distribution:"
        type: string
        required: false
        default: "temurin"
  push:
    branches:
      - main
      - 'release/*'

defaults:
  run:
    shell: bash

jobs:
  code:
    name: Code
    uses: ./.github/workflows/node-zxc-compile-application-code.yaml
    with:
      java-version: ${{ github.event.inputs.java-version || '21.0.4' }}
      java-distribution: ${{ github.event.inputs.java-distribution || 'temurin' }}
      enable-unit-tests: ${{ github.event_name == 'push' || github.event.inputs.enable-unit-tests == 'true' }}
      enable-hapi-tests-misc: ${{ github.event.inputs.enable-hapi-tests == 'true' }}
      enable-hapi-tests-crypto: ${{ github.event.inputs.enable-hapi-tests == 'true' }}
      enable-hapi-tests-token: ${{ github.event.inputs.enable-hapi-tests == 'true' }}
      enable-hapi-tests-smart-contract: ${{ github.event.inputs.enable-hapi-tests == 'true' }}
      enable-hapi-tests-time-consuming: ${{ github.event.inputs.enable-hapi-tests == 'true' }}
      enable-hapi-tests-restart: ${{ github.event.inputs.enable-hapi-tests == 'true' }}
      enable-hapi-tests-nd-reconnect: ${{ github.event.inputs.enable-hapi-tests == 'true' }}
      enable-spotless-check: ${{ github.event.inputs.enable-spotless-check == 'true' }}
      enable-snyk-scan: ${{ github.event_name == 'push' || github.event.inputs.enable-snyk-scan == 'true' }}
      enable-network-log-capture: true
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      snyk-token: ${{ secrets.SNYK_TOKEN }}
      codacy-project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
      gradle-cache-username: ${{ secrets.GRADLE_CACHE_USERNAME }}
      gradle-cache-password: ${{ secrets.GRADLE_CACHE_PASSWORD }}
      codecov-token: ${{ secrets.CODECOV_TOKEN }}

  deploy-ci-trigger:
    name: Trigger CI Flows
    runs-on: network-node-linux-medium
    needs: code
    if: ${{ needs.code.result == 'success' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f # v2.10.2
        with:
          egress-policy: audit

      - name: Configure Workflow Inputs
        id: workflow-inputs
        env:
          REFERENCE: ${{ github.ref }}
          AUTHOR: ${{ github.event.head_commit.author.name }}
          MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          # massage the message to remove invalid control characters
          MASSAGED_MESSAGE="${MESSAGE//[$'\t\r\n']/' '}"

          # Assign github step outputs
          echo "input-ref=${REFERENCE}" >> $GITHUB_OUTPUT
          echo "input-author=${AUTHOR}" >> $GITHUB_OUTPUT
          echo "input-msg=${MASSAGED_MESSAGE}" >> $GITHUB_OUTPUT
          echo "input-sha=${COMMIT_SHA}" >> $GITHUB_OUTPUT

          # Preview the input values
          echo "### Workflow Dispatch Inputs" >> $GITHUB_STEP_SUMMARY
          echo "input-ref=${REFERENCE}" >> $GITHUB_STEP_SUMMARY
          echo "input-author=${AUTHOR}" >> $GITHUB_STEP_SUMMARY
          echo "input-msg=${MASSAGED_MESSAGE}" >> $GITHUB_STEP_SUMMARY
          echo "input-sha=${COMMIT_SHA}" >> $GITHUB_STEP_SUMMARY

      - name: Trigger ZXF Deploy Production Release
        uses: step-security/workflow-dispatch@4d1049025980f72b1327cbfdeecb07fe7a20f577 # v1.2.4
        with:
          workflow: .github/workflows/node-flow-deploy-release-artifact.yaml
          repo: hashgraph/hedera-services # ensure we are executing in the hashgraph org
          ref: main # ensure we are always using the workflow definition from the main branch
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          inputs: '{
            "ref": "${{ steps.workflow-inputs.outputs.input-ref }}",
            "author": "${{ steps.workflow-inputs.outputs.input-author }}",
            "msg": "${{ steps.workflow-inputs.outputs.input-msg }}",
            "sha": "${{ steps.workflow-inputs.outputs.input-sha }}"
          }'
