name: "Deploy Services Release Tag"
on:
  repository_dispatch:
    types:
      - hedera-svcs-release-tag

defaults:
  run:
    shell: bash

permissions:
  contents: read

env:
  LC_ALL: C.UTF-8

jobs:
  create-tag:
    name: Release / Tag
    runs-on: [ self-hosted, Linux, small, scheduler, ephemeral ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          repository: hashgraph/hedera-services
          ref: ${{ github.event.client_payload.ref }}
          fetch-depth: 0

      - name: Install Semantic Version Tools
        run: |
          echo "::group::Download SemVer Binary"
          sudo curl -L -o /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          echo "::endgroup::"
          echo "::group::Change SemVer Binary Permissions"
          sudo chmod -v +x /usr/local/bin/semver
          echo "::endgroup::"
          echo "::group::Show SemVer Binary Version Info"
          semver --version
          echo "::endgroup::"

      - name: Install GnuPG Tools
        if: ${{ inputs.dry-run-enabled != true }}
        run: |
          if ! command -v gpg2 >/dev/null 2>&1; then
            echo "::group::Updating APT Repository Indices"
              sudo apt update
            echo "::endgroup::"
            echo "::group::Installing GnuPG Tools"
              sudo apt install -y gnupg2
            echo "::endgroup::"
          fi

      - name: Import GPG key
        id: gpg_key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_KEY_CONTENTS }}
          passphrase: ${{ secrets.GPG_KEY_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Extract Version
        id: version
        run: |
          VALID_VERSION="$(semver validate "${{ github.event.client_payload.tag.name }}" | tr -d '[:space:]')"
          
          if [[ "${VALID_VERSION}" != "valid" ]]; then
            echo "::error title=Invalid Version::The supplied tag name (${{ needs.check-branch.outputs.tag-name }}) is not a valid semantic version number."
            exit 1
          fi
          
          REL_PART="$(semver get release "${{ github.event.client_payload.tag.name }}")"
          PRE_PART="$(semver get prerel "${{ github.event.client_payload.tag.name }}")"
          
          VERSION="${REL_PART}"
          [[ -n "${PRE_PART}" ]] && VERSION="${VERSION}-${PRE_PART}"
          
          echo "number=${VERSION}" >> "${GITHUB_OUTPUT}"

      - name: Update Software Version
        run: sed -i 's/version=.*$/version=${{ steps.version.outputs.number }}/g' gradle.properties

      - name: Commit Version Changes
        id: git-commit
        uses: EndBug/add-and-commit@v9
        with:
          author_name: ${{ secrets.GIT_USER_NAME }}
          author_email: ${{ secrets.GIT_USER_EMAIL }}
          commit: --signoff --gpg-sign
          tag: "v${{ steps.version.outputs.number }} -s -m '[Automated Release] Hedera Node v${{ steps.version.outputs.number }}'"
          message: "[Automated Release] Hedera Node v${{ steps.version.outputs.number }}"

      - name: Compute Commit Identifier
        id: commit
        run: |
          echo "id=$(echo -n "${{ steps.git-commit.outputs.commit_long_sha }}" | tr -d '[:space:]')" >> "${GITHUB_OUTPUT}"
          echo "short-id=$(echo -n "${{ steps.git-commit.outputs.commit_long_sha }}" | tr -d '[:space:]' | cut -c1-8)" >> "${GITHUB_OUTPUT}"

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RELEASE_WEBHOOK }}
        with:
          payload: |
            {
              "attachments": [
                  {
                    "color": "#16bec7",
                    "blocks": [
                      {
                        "type": "header",
                        "text": {
                          "type": "plain_text",
                          "text": ":ideograph_advantage: Hedera Services - Automatic Release Tagging",
                          "emoji": true
                        }
                      },
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Tag Name:*"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Source Branch:*"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "<${{ github.server_url }}/hashgraph/hedera-services/tree/v${{ steps.version.outputs.number }}|v${{ steps.version.outputs.number }}>"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "<${{ github.server_url }}/hashgraph/hedera-services/tree/${{ github.event.client_payload.ref }}|${{ github.event.client_payload.ref }}>"
                          }
                        ]
                      },
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": "*Source Commit*: \n<${{ github.server_url }}/${{ github.repository }}/commit/${{ steps.commit.outputs.id  }}|${{ steps.commit.outputs.short-id }}>"
                        }
                      },
                      {
                        "type": "divider"
                      },
                      {
                        "type": "context",
                        "elements": [
                          {
                            "type": "mrkdwn",
                            "text": ":watch: Initiated by scheduled repository event at date & time: `${{ github.event.client_payload.schedule.trigger }} UTC`"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
