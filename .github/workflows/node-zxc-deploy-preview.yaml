##
# Copyright (C) 2023-2024 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXC: [Node] Deploy Preview Network Release"
on:
  workflow_call:
    inputs:
      # Valid version policies are as follows: specified, branch-commit, adhoc-commit
      version-policy:
        description: "Version Policy:"
        type: string
        required: true
      new-version:
        description: "New Version:"
        type: string
        required: false
      dry-run-enabled:
        description: "Perform Dry Run"
        type: boolean
        required: false
        default: false
      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Deploy Preview"

    secrets:
      access-token:
        required: true
      bucket-name:
        required: true
      jenkins-preview-url:
        required: true

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: read

jobs:
  Deploy-Preview:
    name: ${{ inputs.custom-job-label || 'Deploy Preview' }}
    runs-on: network-node-linux-large
    outputs:
      version: ${{ steps.effective-version.outputs.number }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - name: Install Semantic Version Tools
        run: |
          echo "::group::Download SemVer Binary"
          sudo curl -L -o /usr/local/bin/semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          echo "::endgroup::"
          echo "::group::Change SemVer Binary Permissions"
          sudo chmod -v +x /usr/local/bin/semver
          echo "::endgroup::"
          echo "::group::Show SemVer Binary Version Info"
          semver --version
          echo "::endgroup::"

      - name: Install JSON Tools
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            echo "::group::Setup JQ Command"
            sudo apt update
            sudo apt install -y jq
            echo "::endgroup::"
          fi

          JQ_VERSION="$(jq --version)"
          if [[ "${JQ_VERSION}" != "jq-1.6" ]]; then
            echo "::group::Updating JQ Version"
            sudo apt update
            sudo apt upgrade -y jq
            echo "::endgroup::"
          fi

          if ! command -v tee >/dev/null 2>&1; then
            echo "::group::Setup Tee Command"
            sudo apt update
            sudo apt install -y coreutils
            echo "::endgroup::"
          fi

          echo "::group::Show JQ Version"
          jq --version
          echo "::endgroup::"

      - name: Verify Version Update (As Specified)
        if: ${{ inputs.version-policy == 'specified' && !cancelled() && !failure() }}
        run: |
          VALID_VERSION="$(semver validate "${{ inputs.new-version }}")"

          if [[ "${VALID_VERSION}" != "valid" ]]; then
            echo "::error title=Version Error::The supplied new-version parameter (${{ inputs.new-version }}) is invalid and does not conform to the semantic versioning specifications."
            exit 2
          fi

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@55bd3a7c6e2ae7cf1877fd1ccb9d54c0503c457c # v2.1.2
        if: ${{ inputs.dry-run-enabled != true && !cancelled() && !failure() }}
        with:
          workload_identity_provider: "projects/235822363393/locations/global/workloadIdentityPools/hedera-builds-pool/providers/hedera-builds-gh-actions"
          service_account: "hedera-artifact-builds@devops-1-254919.iam.gserviceaccount.com"

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200 # v2.1.0
        if: ${{ inputs.dry-run-enabled != true && !cancelled() && !failure() }}

      - name: Validate Release Artifact Exist
        if: ${{ inputs.dry-run-enabled != true && !cancelled() && !failure() }}
        run: |
          ARTIFACT_NAME="build-v${{ inputs.new-version }}"
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}"
          gsutil ls "gs://${{ secrets.bucket-name }}/${ARTIFACT_NAME}.zip"

      - name: Prepare Jenkins Notification Request
        id: jenkins-preview-request
        env:
          PRE_JSON_REQUEST: ${{ toJSON(github.event) }}
        run: echo "request=$(jq --compact-output '.ref = "v${{ inputs.new-version }}"' <<<"${PRE_JSON_REQUEST}")" >>"${GITHUB_OUTPUT}"

      - name: Notify Jenkins of Release (Preview Network)
        id: jenkins-preview
        uses: fjogeleit/http-request-action@0bd00a33db6f82063a3c6befd41f232f61d66583 # v1.15.2
        if: ${{ inputs.dry-run-enabled != true && !cancelled() && !failure() }}
        with:
          url: ${{ secrets.jenkins-preview-url }}
          data: ${{ steps.jenkins-preview-request.outputs.request }}

      - name: Display Jenkins Payload
        env:
          JSON_RESPONSE: ${{ steps.jenkins-preview.outputs.response }}
        run: |
          jq '.' <<<"${JSON_RESPONSE}"
          printf "### Jenkins Response Payload\n\`\`\`json\n%s\n\`\`\`\n" "$(jq '.' <<<"${JSON_RESPONSE}")" >>"${GITHUB_STEP_SUMMARY}"

      - name: Check for Jenkins Failures (Preview Network)
        env:
          JSON_RESPONSE: ${{ steps.jenkins-preview.outputs.response }}
        run: |
          PREVIEW_TRIGGERED="$(jq '.jobs."build-previewnet".triggered' <<<"${JSON_RESPONSE}")"

          if [[ "${PREVIEW_TRIGGERED}" != true ]]; then
            echo "::error title=Jenkins Trigger Failure::Failed to trigger the 'build-previewnet' pipeline in Jenkins!"
            exit 1
          fi
