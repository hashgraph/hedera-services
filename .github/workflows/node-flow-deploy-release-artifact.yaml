##
# Copyright (C) 2022-2024 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXF: Deploy Production Release"
on:
  push:
    branches:
      - develop
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+-?*"
  workflow_dispatch:
    inputs:
      ref:
        required: true
        description: "The github branch or tag that triggered the workflow"
      author:
        required: false
        description: "The author of the commit"
        default: ""
      msg:
        required: false
        description: "The message on the head commit"
        default: ""
      sha:
        required: false
        description: "The commit ID of the commit that triggered the workflow"
        default: ""

defaults:
  run:
    shell: bash

jobs:
  semantic-release:
    name: Semantic Release
    if: ${{ github.event_name == 'push' }}
    runs-on: network-node-linux-medium
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: |
          npm ci
          npm install --save-dev \
            @semantic-release/changelog \
            @semantic-release/git \
            conventional-changelog-conventionalcommits

      - name: Install GnuPG Tools
        if: ${{ inputs.dry-run-enabled != true }}
        run: |
          if ! command -v gpg2 >/dev/null 2>&1; then
            echo "::group::Updating APT Repository Indices"
              sudo apt update
            echo "::endgroup::"
            echo "::group::Installing GnuPG Tools"
              sudo apt install -y gnupg2
            echo "::endgroup::"
          fi

      - name: Import GPG key
        id: gpg_key
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        with:
          gpg_private_key: ${{ secrets.sdk-gpg-key-contents }}
          passphrase: ${{ secrets.sdk-gpg-key-passphrase }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Semantic Release
        id: semantic
        uses: semantic-release/semantic-release@43df51b79ec9c8716b737804486b375459ea177e # v24.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git

      - name: Call Build Release Artifact
        if: ${{ steps.semantic.outputs.new_release_published == 'true' }}
        uses: ./.github/workflows/node-zxc-build-release-artifact.yaml
        with:
          version-policy: specified
          trigger-env-deploy: none
          release-profile: ${{ contains(steps.semantic.outputs.new_release_version, '-') && 'PrereleaseChannel' || 'MavenCentral' }}
          new-version: ${{ steps.semantic.outputs.new_release_version }}
        secrets:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          bucket-name: ${{ secrets.RELEASE_ARTIFACT_BUCKET_NAME }}
          cdn-bucket-name: ${{ secrets.CDN_ARTIFACT_BUCKET_NAME }}
          svcs-ossrh-username: ${{ secrets.SVCS_OSSRH_USERNAME }}
          svcs-ossrh-password: ${{ secrets.SVCS_OSSRH_PASSWORD }}
          svcs-gpg-key-contents: ${{ secrets.SVCS_GPG_KEY_CONTENTS }}
          svcs-gpg-key-passphrase: ${{ secrets.SVCS_GPG_KEY_PASSPHRASE }}
          sdk-ossrh-username: ${{ secrets.PLATFORM_OSSRH_USERNAME }}
          sdk-ossrh-password: ${{ secrets.PLATFORM_OSSRH_PASSWORD }}
          sdk-gpg-key-contents: ${{ secrets.PLATFORM_GPG_KEY_CONTENTS }}
          sdk-gpg-key-passphrase: ${{ secrets.PLATFORM_GPG_KEY_PASSPHRASE }}
          slack-webhook-url: ${{ secrets.PLATFORM_SLACK_RELEASE_WEBHOOK }}
          jf-url: ${{ vars.JF_URL }}
          jf-docker-registry: ${{ vars.JF_DOCKER_REGISTRY }}
          jf-user-name: ${{ vars.JF_USER_NAME }}
          jf-access-token: ${{ secrets.JF_ACCESS_TOKEN }}

  release-branch:
    name: Release [Branch]
    uses: ./.github/workflows/node-zxc-build-release-artifact.yaml
    if: ${{ github.event_name == 'workflow_dispatch' }}
    with:
      version-policy: branch-commit
      trigger-env-deploy: integration
      release-profile: DevelopCommit
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      bucket-name: ${{ secrets.RELEASE_ARTIFACT_BUCKET_NAME }}
      cdn-bucket-name: ${{ secrets.CDN_ARTIFACT_BUCKET_NAME }}
      svcs-ossrh-username: ${{ secrets.SVCS_OSSRH_USERNAME }}
      svcs-ossrh-password: ${{ secrets.SVCS_OSSRH_PASSWORD }}
      svcs-gpg-key-contents: ${{ secrets.SVCS_GPG_KEY_CONTENTS }}
      svcs-gpg-key-passphrase: ${{ secrets.SVCS_GPG_KEY_PASSPHRASE }}
      sdk-ossrh-username: ${{ secrets.PLATFORM_OSSRH_USERNAME }}
      sdk-ossrh-password: ${{ secrets.PLATFORM_OSSRH_PASSWORD }}
      sdk-gpg-key-contents: ${{ secrets.PLATFORM_GPG_KEY_CONTENTS }}
      sdk-gpg-key-passphrase: ${{ secrets.PLATFORM_GPG_KEY_PASSPHRASE }}
      slack-webhook-url: ${{ secrets.PLATFORM_SLACK_RELEASE_WEBHOOK }}
      jf-url: ${{ vars.JF_URL }}
      jf-docker-registry: ${{ vars.JF_DOCKER_REGISTRY }}
      jf-user-name: ${{ vars.JF_USER_NAME }}
      jf-access-token: ${{ secrets.JF_ACCESS_TOKEN }}

  deploy-ci-trigger:
    name: Trigger CI Flows
    runs-on: network-node-linux-medium
    needs:
      - release-branch
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f086349bfa2bd1361f7909c78558e816508cdc10 # v2.8.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'
          ref: develop
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Trigger ZXF Prepare Extended Test Suite
        if: ${{ needs.release-branch.result == 'success' }}
        uses: step-security/workflow-dispatch@4d1049025980f72b1327cbfdeecb07fe7a20f577 # v1.2.4
        with:
          workflow: .github/workflows/zxf-prepare-extended-test-suite.yaml
          repo: hashgraph/hedera-services # ensure we are executing in the hashgraph org
          ref: develop # ensure we are always using the workflow definition from the develop branch
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          inputs: '{ "ref": "${{ inputs.ref }}" }'

      - name: Trigger ZXF Deploy Integration
        if: ${{ needs.release-branch.result == 'success' &&
          (inputs.author != '' && inputs.msg != '' && inputs.sha != '') &&
          !cancelled() }}
        uses: step-security/workflow-dispatch@4d1049025980f72b1327cbfdeecb07fe7a20f577 # v1.2.4
        with:
          workflow: .github/workflows/node-zxf-deploy-integration.yaml
          repo: hashgraph/hedera-services # ensure we are executing in the hashgraph org
          ref: develop # ensure we are always using the workflow definition from the develop branch
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          inputs: '{
            "ref": "${{ inputs.ref }}",
            "author": "${{ inputs.author }}",
            "msg": "${{ inputs.msg }}",
            "sha": "${{ inputs.sha }}"
          }'
