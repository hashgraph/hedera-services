# SPDX-License-Identifier: Apache-2.0
# port of node; default value is 50211
# port=50777
# number of threads to concurrently submit requests
numThreads=5
# number of requests per second
requestPerSec=10
# whether payer account is randomly selected
isRandomPayer=true
# type of file for creation
fileTypes=txt,jpg,pdf,bin
# size of file to create
fileSizesK=1,2,3,4,5,9
# max number of requests in K to run, no cap (i.e. run indefinitely) if value is -1.
# Note this number can be a decimal value for fine grained control. e.g. a valuue of 0.1 translates into 100 total requests. 
maxRequestsInK=1
# max transfer amount. For a given transfer a random amount between 1 and the max will be selected
maxTransferAmount=100
#
# number of seed accounts  used as payers of transactions. These accounts may be to be created by genesis. 
# Alternatively, they can be the system acounts when the flag useSystemAccountAsPayer is set (see below).
# In this case, the value should be set such that when combined with the genesis and node accounts, 
# the total should not exceed 100. If the limit is exceeded, only accounts under the limit will be used.
numCryptoAccounts=1
#
# number of seed accounts to be created by genesis. These accounts are used as transfer's from and to parties.
numTransferAccounts=2
#
# whether transfer account (from or to) is randomly selected
isRandomTransferAccount=true
#
#
## API inclusions by group as comma separated list.
# where each entry is a pair of group name and number of calls per each member API of the group separated by "|".
# If the number of calls is specified as "-1", then this API will continue to be called unless there's cap on maxRequestsInK.
# The group choices include cryptoAPI,fileAPI,contractAPI.
# Note singleInclusions and groupInclusions are additive. If there is overlap, singleInclusions specs override those of groupInclusions.
# If groupInclusions are not specified, then maxRequestsInK and singleInclusions apply
# If both singleInclusions and groupInclusions are not specified, then all APIs are included and maxRequestsInK apply
#
# groupInclusions=cryptoAPI|0,fileAPI|0,contractAPI|0
#
# API inclusions by individual APIs as comma separated list, where each entry is a pair of API name and number of calls separated by "|".
# If the number of calls is specified as "-1", then this API will continue to be called unless there's cap on maxRequestsInK.
# The API choices are as follows. 
# cryptoAPI: cryptoCreate, cryptoTransfer, cryptoUpdate, cryptoGetInfo, cryptoGetBalance, cryptoGetRecords, getTxReceipt, getTxFastRecord, getTxRecord 
# fileAPI: fileUpload, fileGetInfo, fileGetContent, fileUpdate, fileDelete, 
# cryptoAPI: cryptoCreate, cryptoTransfer, cryptoUpdate, cryptoGetInfo, cryptoGetBalance, cryptoGetRecords, 
# contractAPI: createContract, updateContract, contractCallMethod, contractCallLocalMethod, contractGetBytecode, getContractInfo, getBySolidityID, getTxRecordByContractID
# If singleInclusions are not specified, then maxRequestsInK and groupInclusions apply
# If both singleInclusions and groupInclusions are not specified, then all APIs are included and maxRequestsInK apply
#
#singleInclusions=createContract|1
#
# All APIs (Large RUN )
#singleInclusions=cryptoTransfer|100,cryptoCreate|5,cryptoUpdate|100,cryptoGetInfo|100,cryptoGetBalance|100,cryptoGetRecords|100,getTxReceipt|100,getTxRecord|100,fileUpload|2,fileGetInfo|100,fileGetContent|20,fileUpdate|100,fileDelete|100,createContract|2,updateContract|10,contractCallMethod|100,contractCallLocalMethod|100,contractGetBytecode|100,getContractInfo|100,getBySolidityID|100,getTxRecordByContractID|100
## DEFAULT_INITIAL_ACCOUNT_BALANCE , when test payer account is created it will be created with this balance
#initialAccountBalance=150000000000
#
# All APIs (Medium RUN)
#singleInclusions=cryptoTransfer|50,cryptoCreate|4,cryptoUpdate|50,cryptoGetInfo|50,cryptoGetBalance|50,cryptoGetRecords|50,getTxReceipt|50,getTxRecord|50,fileUpload|2,fileGetInfo|10,fileGetContent|10,fileUpdate|2,fileDelete|2,createContract|2,updateContract|2,contractCallMethod|2,contractCallLocalMethod|2,contractGetBytecode|2,getContractInfo|2,getBySolidityID|2,getTxRecordByContractID|2
## DEFAULT_INITIAL_ACCOUNT_BALANCE , when test payer account is created it will be created with this balance
#initialAccountBalance=100000000000
#
# ALl APIs (Small RUN )
# singleInclusions=cryptoTransfer|20,cryptoCreate|2,cryptoUpdate|20,cryptoGetInfo|20,cryptoGetBalance|20,cryptoGetRecords|20,getTxReceipt|20,getTxRecord|20,fileUpload|2,fileGetInfo|10,fileGetContent|10,fileUpdate|2,fileDelete|2,createContract|2,updateContract|2,contractCallMethod|2,contractCallLocalMethod|2,contractGetBytecode|2,getContractInfo|2,getBySolidityID|2,getTxRecordByContractID|2
# DEFAULT_INITIAL_ACCOUNT_BALANCE , when test payer account is created it will be created with this balance
initialAccountBalance=10080000000000
#
#
## variable to control small account balance ,i.e initialAccountBalance / smallAccountBalanceFactor
smallAccountBalanceFactor=1001000000
#
##Max transaction fee for Crypto operations
cryptoMaxFee=500000000
#
##Max transaction fee for file operations
fileMaxFee=800000000
#
##Max transaction fee for Smart Contract operations
contractMaxFee=6000000000
#
#
## Account key type. The default is single, use single for main-net or test-net.
# accountKeyType=single
accountKeyType=single,keylist,thresholdKey
#
#
## flag whether or not to change genesis account key and rollback to start up key at end of the test
# changeGenesisKey=true
#
# 
## Tx signature format: SignatureList, SignatureMap or Random (i.e. any of the two at random). The default is SignatureMap.
signatureFormat=SignatureMap
#
#
## Number of WACL keys to generate
numWaclKeys=3
#
#
## flag whether or not to get receipts after a transfer transaction
getReceipt=true
#
#
## Tx body format: Body, BodyBytes, or Random (i.e. any of the two at random). The default is BodyBytes.
transactionBodyFormat=Random
#
# 
## flag whether or not to use system accounts (i.e. account number under 100 excluding genesis and node accounts)
useSystemAccountAsPayer=false
#
# time in ms to retry api if server response receive as a busy
busyRetrySleep=100
#
# how many time call need to retry
maxBusyRetry=15
#
## Maximum Bytes per Transaction
transactionMaxBytes=6144
#
## Code to return if there are test failures
errorReturnCode=3
