# port of node; default value is 50211
# port=50777
# number of threads to concurrently submit requests
numThreads=10
# number of requests per second
requestPerSec=200
# whether payer account is randomly selected
isRandomPayer=true
# type of file for creation
fileTypes=txt,jpg,pdf,bin
# size of file to create
fileSizesK=1,2,3,4,5,9
# max number of requests in K to run, no cap (i.e. run indefinitely) if value is -1.
# Note this number can be a decimal value for fine grained control. e.g. a valuue of 0.1 translates into 100 total requests. 
maxRequestsInK=1
# max transfer amount. For a given transfer a random amount between 1 and the max will be selected
maxTransferAmount=100
#
# number of seed accounts  used as payers of transactions. These accounts may be to be created by genesis. 
# Alternatively, they can be the system acounts when the flag useSystemAccountAsPayer is set (see below).
# In this case, the value should be set such that when combined with the genesis and node accounts, 
# the total should not exceed 100. If the limit is exceeded, only accounts under the limit will be used.
numCryptoAccounts=10
#
# number of seed accounts to be created by genesis. These accounts are used as transfer's from and to parties.
numTransferAccounts=5
#
# whether transfer account (from or to) is randomly selected
isRandomTransferAccount=true
#
# API inclusions by individual APIs as comma separated list, where each entry is a pair of API name and number of calls separated by "|". 
# If the number of calls is specified as "-1", then this API will continue to be called unless there's cap on maxRequestsInK.
# The API choices are as follows. 
# cryptoAPI: cryptoCreate, cryptoTransfer, cryptoUpdate, cryptoGetInfo, cryptoGetBalance, cryptoGetRecords, getTxReceipt, getTxFastRecord, getTxRecord 
# fileAPI: fileUpload, fileGetInfo, fileGetContent, fileUpdate, fileDelete, 
# cryptoAPI: cryptoCreate, cryptoTransfer, cryptoUpdate, cryptoGetInfo, cryptoGetBalance, cryptoGetRecords, 
# contractAPI: createContract, updateContract, contractCallMethod, contractCallLocalMethod, contractGetBytecode, getContractInfo, getBySolidityID, getTxRecordByContractID
# If singleInclusions are not specified, then maxRequestsInK and groupInclusions apply
# If both singleInclusions and groupInclusions are not specified, then all APIs are included and maxRequestsInK apply
#
# singleInclusions=cryptoTransfer|8000
#
#
## API inclusions by group as comma separated list.  
# where each entry is a pair of group name and number of calls per each member API of the group separated by "|". 
# If the number of calls is specified as "-1", then this API will continue to be called unless there's cap on maxRequestsInK.
# The group choices include cryptoAPI,fileAPI,contractAPI.
# Note singleInclusions and groupInclusions are additive. If there is overlap, singleInclusions specs override those of groupInclusions.
# If groupInclusions are not specified, then maxRequestsInK and singleInclusions apply
# If both singleInclusions and groupInclusions are not specified, then all APIs are included and maxRequestsInK apply
#
groupInclusions=cryptoAPI|50,fileAPI|0,contractAPI|0
#
#
## Account key type. The default is single.
# accountKeyType=single,keylist,thresholdKey
accountKeyType=single,keylist,thresholdKey
#
#
## flag whether or not to change genesis account key and rollback to start up key at end of the test
# changeGenesisKey=true
#
# 
## Tx signature format: SignatureList, SignatureMap or Random (i.e. any of the two at random). The default is SignatureMap.
signatureFormat=Random
#
#
## Number of WACL keys to generate
numWaclKeys=3
#
#
## flag whether or not to get receipts after a transfer transaction
getReceipt=true
#
#
## variable to control small account balance ,i.e initialAccountBalance / smallAccountBalanceFactor
smallAccountBalanceFactor=1000000
#
# 
## Tx body format: Body, BodyBytes, or Random (i.e. any of the two at random). The default is BodyBytes.
transactionBodyFormat=Random
#
# 
## flag whether or not to use system accounts (i.e. account number under 100 excluding genesis and node accounts)
useSystemAccountAsPayer=false
